{
  "api/Multiuser.ConnectionManager.ConnectionStatus.html": {
    "href": "api/Multiuser.ConnectionManager.ConnectionStatus.html",
    "title": "Enum ConnectionManager.ConnectionStatus | Planetary Parfait",
    "keywords": "Enum ConnectionManager.ConnectionStatus Namespace : Multiuser Assembly : cs.temp.dll.dll Syntax public enum ConnectionStatus Fields Name Description Connected Disconnected"
  },
  "api/Multiuser.ConnectionManager.html": {
    "href": "api/Multiuser.ConnectionManager.html",
    "title": "Class ConnectionManager | Planetary Parfait",
    "keywords": "Class ConnectionManager Inheritance System.Object ConnectionManager Namespace : Multiuser Assembly : cs.temp.dll.dll Syntax public class ConnectionManager : MonoBehaviour Fields singleton Declaration public static ConnectionManager singleton Field Value Type Description ConnectionManager Events OnClientConnectionNotification Invoked when a client connects or disconnects from the server Declaration public event Action<ulong, ConnectionManager.ConnectionStatus> OnClientConnectionNotification Event Type Type Description Action < System.UInt64 , ConnectionManager.ConnectionStatus >"
  },
  "api/Multiuser.Follower.html": {
    "href": "api/Multiuser.Follower.html",
    "title": "Class Follower | Planetary Parfait",
    "keywords": "Class Follower This script is attached to the Player Prefab, which ONLY contains the player mesh and animator. It updates the location and animation of the networked mesh to the player that is local to each user's device. This is to ensure that no cameras or movement controls are mixed up over the network. Inheritance System.Object Follower Namespace : Multiuser Assembly : cs.temp.dll.dll Syntax public class Follower : NetworkBehaviour Fields localTransform Declaration public Transform localTransform Field Value Type Description Transform networkTag Declaration public string networkTag Field Value Type Description System.String"
  },
  "api/Multiuser.html": {
    "href": "api/Multiuser.html",
    "title": "Namespace Multiuser | Planetary Parfait",
    "keywords": "Namespace Multiuser Classes ConnectionManager Follower This script is attached to the Player Prefab, which ONLY contains the player mesh and animator. It updates the location and animation of the networked mesh to the player that is local to each user's device. This is to ensure that no cameras or movement controls are mixed up over the network. Leader This script is attached to the local player, which contains the camera and all movement controls for the user. MultiplayerManager Main script for creating/joining a multiuser server. Username Enums ConnectionManager.ConnectionStatus"
  },
  "api/Multiuser.Leader.html": {
    "href": "api/Multiuser.Leader.html",
    "title": "Class Leader | Planetary Parfait",
    "keywords": "Class Leader This script is attached to the local player, which contains the camera and all movement controls for the user. Inheritance System.Object Leader Namespace : Multiuser Assembly : cs.temp.dll.dll Syntax public class Leader : MonoBehaviour Fields localTag Declaration public string localTag Field Value Type Description System.String pairs contains the location and string identifier for each Leader object Declaration public static Dictionary<string, Transform> pairs Field Value Type Description Dictionary < System.String , Transform >"
  },
  "api/Multiuser.MultiplayerManager.html": {
    "href": "api/Multiuser.MultiplayerManager.html",
    "title": "Class MultiplayerManager | Planetary Parfait",
    "keywords": "Class MultiplayerManager Main script for creating/joining a multiuser server. Inheritance System.Object MultiplayerManager Namespace : Multiuser Assembly : cs.temp.dll.dll Syntax public class MultiplayerManager : MonoBehaviour Fields joinCode Declaration public string joinCode Field Value Type Description System.String playerName Declaration public string playerName Field Value Type Description System.String Properties Instance Declaration public static MultiplayerManager Instance { get; } Property Value Type Description MultiplayerManager Methods CreateRelay() Creates a Relay when user opens a Lobby. Declaration public async void CreateRelay() JoinRelay(String) Let users join the server using the generated joinCode. Ran when a client wants to join the server Declaration public async void JoinRelay(string roomJoinCode) Parameters Type Name Description System.String roomJoinCode"
  },
  "api/Multiuser.Sync.CustomUnnamedMessageHandler-1.html": {
    "href": "api/Multiuser.Sync.CustomUnnamedMessageHandler-1.html",
    "title": "Class CustomUnnamedMessageHandler<T> | Planetary Parfait",
    "keywords": "Class CustomUnnamedMessageHandler<T> Inheritance System.Object CustomUnnamedMessageHandler<T> LayerSync MaterialSync PerPixelSync Namespace : Multiuser.Sync Assembly : cs.temp.dll.dll Syntax public class CustomUnnamedMessageHandler<T> : NetworkBehaviour Type Parameters Name Description T Methods MessageType() Declaration protected virtual byte MessageType() Returns Type Description System.Byte OnNetworkDespawn() Declaration public override void OnNetworkDespawn() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() OnReceivedUnnamedMessage(UInt64, FastBufferReader) Receives unnamed message across the network through a Buffer Reader Declaration protected virtual void OnReceivedUnnamedMessage(ulong clientID, FastBufferReader reader) Parameters Type Name Description System.UInt64 clientID FastBufferReader reader SendUnnamedMessage(T) Unnamed message to be sent across the network by the Host, Server, or Client Declaration public virtual void SendUnnamedMessage(T dataToSend) Parameters Type Name Description T dataToSend"
  },
  "api/Multiuser.Sync.html": {
    "href": "api/Multiuser.Sync.html",
    "title": "Namespace Multiuser.Sync | Planetary Parfait",
    "keywords": "Namespace Multiuser.Sync Classes CustomUnnamedMessageHandler<T> LayerSync MaterialSync This class syncronizes the terrain scene object between hosts and clients by sending the terrain jsonURL as an unnamed message and downloading that terrain on the client's machine. PerPixelSync Located on the pin prefab object. Synchronizes the pin number and values between host and client using NetworkVariables.S"
  },
  "api/Multiuser.Sync.LayerSync.html": {
    "href": "api/Multiuser.Sync.LayerSync.html",
    "title": "Class LayerSync | Planetary Parfait",
    "keywords": "Class LayerSync Inheritance System.Object CustomUnnamedMessageHandler < System.String > LayerSync Namespace : Multiuser.Sync Assembly : cs.temp.dll.dll Syntax public class LayerSync : CustomUnnamedMessageHandler<string> Fields singleton Declaration public static LayerSync singleton Field Value Type Description LayerSync Methods MessageType() Declaration protected override byte MessageType() Returns Type Description System.Byte Overrides Multiuser.Sync.CustomUnnamedMessageHandler<System.String>.MessageType() OnNetworkDespawn() Declaration public override void OnNetworkDespawn() Overrides Multiuser.Sync.CustomUnnamedMessageHandler<System.String>.OnNetworkDespawn() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Multiuser.Sync.CustomUnnamedMessageHandler<System.String>.OnNetworkSpawn() OnReceivedUnnamedMessage(UInt64, FastBufferReader) Declaration protected override void OnReceivedUnnamedMessage(ulong clientID, FastBufferReader reader) Parameters Type Name Description System.UInt64 clientID FastBufferReader reader Overrides Multiuser.Sync.CustomUnnamedMessageHandler<System.String>.OnReceivedUnnamedMessage(System.UInt64, FastBufferReader) SendUnnamedMessage(String) Declaration public override void SendUnnamedMessage(string dataToSend) Parameters Type Name Description System.String dataToSend Overrides Multiuser.Sync.CustomUnnamedMessageHandler<System.String>.SendUnnamedMessage(System.String)"
  },
  "api/Multiuser.Sync.MaterialSync.html": {
    "href": "api/Multiuser.Sync.MaterialSync.html",
    "title": "Class MaterialSync | Planetary Parfait",
    "keywords": "Class MaterialSync This class syncronizes the terrain scene object between hosts and clients by sending the terrain jsonURL as an unnamed message and downloading that terrain on the client's machine. Inheritance System.Object CustomUnnamedMessageHandler < System.String > MaterialSync Namespace : Multiuser.Sync Assembly : cs.temp.dll.dll Syntax public class MaterialSync : CustomUnnamedMessageHandler<string> Fields sampleTerrain01 Declaration public GameObject sampleTerrain01 Field Value Type Description GameObject sampleTerrain02 Declaration public GameObject sampleTerrain02 Field Value Type Description GameObject sampleTerrain03 Declaration public GameObject sampleTerrain03 Field Value Type Description GameObject sampleTerrain04 Declaration public GameObject sampleTerrain04 Field Value Type Description GameObject terrainURL Declaration public string terrainURL Field Value Type Description System.String Methods MessageType() Override method that defines the unnamed message Declaration protected override byte MessageType() Returns Type Description System.Byte Overrides Multiuser.Sync.CustomUnnamedMessageHandler<System.String>.MessageType() OnNetworkDespawn() Declaration public override void OnNetworkDespawn() Overrides Multiuser.Sync.CustomUnnamedMessageHandler<System.String>.OnNetworkDespawn() OnNetworkSpawn() Declaration public override void OnNetworkSpawn() Overrides Multiuser.Sync.CustomUnnamedMessageHandler<System.String>.OnNetworkSpawn() OnReceivedUnnamedMessage(UInt64, FastBufferReader) Determines what happens with the message once it's recieved by the host/client Declaration protected override void OnReceivedUnnamedMessage(ulong clientID, FastBufferReader reader) Parameters Type Name Description System.UInt64 clientID FastBufferReader reader Overrides Multiuser.Sync.CustomUnnamedMessageHandler<System.String>.OnReceivedUnnamedMessage(System.UInt64, FastBufferReader) SendUnnamedMessage(String) Declaration public override void SendUnnamedMessage(string dataToSend) Parameters Type Name Description System.String dataToSend Overrides Multiuser.Sync.CustomUnnamedMessageHandler<System.String>.SendUnnamedMessage(System.String)"
  },
  "api/Multiuser.Sync.PerPixelSync.html": {
    "href": "api/Multiuser.Sync.PerPixelSync.html",
    "title": "Class PerPixelSync | Planetary Parfait",
    "keywords": "Class PerPixelSync Located on the pin prefab object. Synchronizes the pin number and values between host and client using NetworkVariables.S Inheritance System.Object CustomUnnamedMessageHandler < System.String > PerPixelSync Inherited Members CustomUnnamedMessageHandler<String>.MessageType() CustomUnnamedMessageHandler<String>.OnNetworkDespawn() CustomUnnamedMessageHandler<String>.OnReceivedUnnamedMessage(UInt64, FastBufferReader) CustomUnnamedMessageHandler<String>.SendUnnamedMessage(String) Namespace : Multiuser.Sync Assembly : cs.temp.dll.dll Syntax public class PerPixelSync : CustomUnnamedMessageHandler<string> Fields pinData Declaration public NetworkVariable<FixedString512Bytes> pinData Field Value Type Description NetworkVariable < FixedString512Bytes > pinNumber Declaration public NetworkVariable<FixedString32Bytes> pinNumber Field Value Type Description NetworkVariable < FixedString32Bytes > Methods OnNetworkSpawn() Called when a network opens or when a new pin is spawned into server (EX: when host opens a server, client joins room) Declaration public override void OnNetworkSpawn() Overrides Multiuser.Sync.CustomUnnamedMessageHandler<System.String>.OnNetworkSpawn()"
  },
  "api/Multiuser.Username.html": {
    "href": "api/Multiuser.Username.html",
    "title": "Class Username | Planetary Parfait",
    "keywords": "Class Username Inheritance System.Object Username Namespace : Multiuser Assembly : cs.temp.dll.dll Syntax public class Username : NetworkBehaviour Fields username Declaration public NetworkVariable<FixedString128Bytes> username Field Value Type Description NetworkVariable < FixedString128Bytes > Methods OnNetworkDespawn() Ran when a player leaves from experience Declaration public override void OnNetworkDespawn() OnNetworkSpawn() Invoked on each NetworkBehaviour associated with a spawned NetworkObject Since parent is dynamically spawned via Netcode, this method will run first BEFORE Start(). Declaration public override void OnNetworkSpawn() UpdateUsername(FixedString128Bytes, FixedString128Bytes) Updates a client's username Declaration public void UpdateUsername(FixedString128Bytes previous, FixedString128Bytes current) Parameters Type Name Description FixedString128Bytes previous FixedString128Bytes current"
  },
  "api/TerrainEngine.DataPackBehaviour.html": {
    "href": "api/TerrainEngine.DataPackBehaviour.html",
    "title": "Class DataPackBehaviour | Planetary Parfait",
    "keywords": "Class DataPackBehaviour When added onto a gameObject, it downloads data from a JMARSScene Inheritance System.Object DataPackBehaviour Namespace : TerrainEngine Assembly : cs.temp.dll.dll Syntax public class DataPackBehaviour : MonoBehaviour Fields autoLoad Declaration public bool autoLoad Field Value Type Description System.Boolean dataPack Declaration public JMARSScene.DataPack dataPack Field Value Type Description JMARSScene.DataPack Methods LoadByteData() For new sample terrains, this method converts raw dataTextAssets to byte dataTextAssets for local file storage Declaration public void LoadByteData() LoadData() Declaration public void LoadData() Start() Declaration public void Start()"
  },
  "api/TerrainEngine.html": {
    "href": "api/TerrainEngine.html",
    "title": "Namespace TerrainEngine | Planetary Parfait",
    "keywords": "Namespace TerrainEngine Classes DataPackBehaviour When added onto a gameObject, it downloads data from a JMARSScene JMARSScene /// A JMARS scene is a collection of terrain data, such as layer information, images, and depth-maps. **DO NOT ADD/REMOVE CODE FROM THIS SCRIPT. This is structured with the same format as the JSON code we get from JMARS JMARSScene.DataPack Used for sample terrains. This is how we load terrains offline by storing them locally JMARSScene.Layer Class that specifies a Layer object and pulls all layer data from the JSON JMARSScene.Layer.LayerData JMARSScene.Layer.LayerData.TextData This class represents a single nomenclature object with its name and (x,z) coordinates on the terrain JMARSScene.Layer.TimeSliderData **Not implemented JMARSScene.Metadata Downloaded when a user logs into their JMARS account. Used to populate the custom terrains menu with the metadata variables in this class. MaterialColorSetter SceneDownloader LOAD-BEARING SCRIPT. Ran on start. SceneMaterializer LOAD-BEARING SCRIPT. Ran on start. This script will replace and alter the tiles to represent the scene the user is currently on. Definition: Scene - A scene is a collection of terrain data, such as layer information, images, and depth-maps. TerrainColorTextureProvider TileMaker Enums SceneDownloader.SceneSession All states for the SceneSession state machine."
  },
  "api/TerrainEngine.JMARSScene.DataPack.html": {
    "href": "api/TerrainEngine.JMARSScene.DataPack.html",
    "title": "Class JMARSScene.DataPack | Planetary Parfait",
    "keywords": "Class JMARSScene.DataPack Used for sample terrains. This is how we load terrains offline by storing them locally Inheritance System.Object JMARSScene.DataPack Namespace : TerrainEngine Assembly : cs.temp.dll.dll Syntax public class DataPack Fields heightData Declaration public byte[] heightData Field Value Type Description System.Byte [] heightDataTextAsset Declaration public TextAsset heightDataTextAsset Field Value Type Description TextAsset heightDataType Declaration public string heightDataType Field Value Type Description System.String jsonURL Declaration public string jsonURL Field Value Type Description System.String layerData Declaration public List<TextAsset> layerData Field Value Type Description List < TextAsset > textures Declaration public Texture2D[] textures Field Value Type Description Texture2D [] viewSceneJson Declaration public string viewSceneJson Field Value Type Description System.String viewSceneJsonTextAsset Declaration public TextAsset viewSceneJsonTextAsset Field Value Type Description TextAsset Methods LoadData() Loads all of the data from the DataPack into a JMARSScene object Declaration public void LoadData()"
  },
  "api/TerrainEngine.JMARSScene.html": {
    "href": "api/TerrainEngine.JMARSScene.html",
    "title": "Class JMARSScene | Planetary Parfait",
    "keywords": "Class JMARSScene /// A JMARS scene is a collection of terrain data, such as layer information, images, and depth-maps. **DO NOT ADD/REMOVE CODE FROM THIS SCRIPT. This is structured with the same format as the JSON code we get from JMARS Inheritance System.Object JMARSScene Namespace : TerrainEngine Assembly : cs.temp.dll.dll Syntax public class JMARSScene Fields body Declaration public string body Field Value Type Description System.String depth_data_type Declaration public string depth_data_type Field Value Type Description System.String depth_img Declaration public string depth_img Field Value Type Description System.String depthTexture Declaration public Texture2D depthTexture Field Value Type Description Texture2D dimension Declaration public string dimension Field Value Type Description System.String exaggeration Declaration public string exaggeration Field Value Type Description System.String heightMapRange Declaration public float heightMapRange Field Value Type Description System.Single heightOffset Declaration public float heightOffset Field Value Type Description System.Single index Declaration public int index Field Value Type Description System.Int32 last_accessed_date Declaration public string last_accessed_date Field Value Type Description System.String last_mod_date Declaration public string last_mod_date Field Value Type Description System.String layers The lists of layers is currently non-reorderable because this version of Unity has BROKEN LISTS! 2020.3.f1 Declaration public List<JMARSScene.Layer> layers Field Value Type Description List < JMARSScene.Layer > layersTexture Declaration public RenderTexture layersTexture Field Value Type Description RenderTexture name Declaration public string name Field Value Type Description System.String starting_point Declaration public string starting_point Field Value Type Description System.String thumbnail_img Declaration public string thumbnail_img Field Value Type Description System.String thumbnail_texture Declaration public Texture2D thumbnail_texture Field Value Type Description Texture2D units Declaration public string units Field Value Type Description System.String Methods ImportJMARSSceneDataFromDataPack(JMARSScene.DataPack) Declaration public static void ImportJMARSSceneDataFromDataPack(JMARSScene.DataPack datapack) Parameters Type Name Description JMARSScene.DataPack datapack"
  },
  "api/TerrainEngine.JMARSScene.Layer.html": {
    "href": "api/TerrainEngine.JMARSScene.Layer.html",
    "title": "Class JMARSScene.Layer | Planetary Parfait",
    "keywords": "Class JMARSScene.Layer Class that specifies a Layer object and pulls all layer data from the JSON Inheritance System.Object JMARSScene.Layer Namespace : TerrainEngine Assembly : cs.temp.dll.dll Syntax public class Layer Fields global_flag Declaration public string global_flag Field Value Type Description System.String graphic_img Declaration public string graphic_img Field Value Type Description System.String graphicTexture Declaration public Texture2D graphicTexture Field Value Type Description Texture2D layer_data Declaration public List<JMARSScene.Layer.LayerData> layer_data Field Value Type Description List < JMARSScene.Layer.LayerData > layer_key Declaration public string layer_key Field Value Type Description System.String layer_name Declaration public string layer_name Field Value Type Description System.String slider Declaration public Slider slider Field Value Type Description Slider time_slider_data Declaration public List<JMARSScene.Layer.TimeSliderData> time_slider_data Field Value Type Description List < JMARSScene.Layer.TimeSliderData > toggle Declaration public Toggle toggle Field Value Type Description Toggle toggle_state Declaration public string toggle_state Field Value Type Description System.String transparency Declaration public float transparency Field Value Type Description System.Single"
  },
  "api/TerrainEngine.JMARSScene.Layer.LayerData.html": {
    "href": "api/TerrainEngine.JMARSScene.Layer.LayerData.html",
    "title": "Class JMARSScene.Layer.LayerData | Planetary Parfait",
    "keywords": "Class JMARSScene.Layer.LayerData Inheritance System.Object JMARSScene.Layer.LayerData Namespace : TerrainEngine Assembly : cs.temp.dll.dll Syntax public class LayerData Fields data_type Declaration public string data_type Field Value Type Description System.String numeric_data_img Declaration public string numeric_data_img Field Value Type Description System.String numeric_flag Declaration public string numeric_flag Field Value Type Description System.String numericDataTexture Declaration public Texture2D numericDataTexture Field Value Type Description Texture2D source_name Declaration public string source_name Field Value Type Description System.String source_units Declaration public string source_units Field Value Type Description System.String text_data Declaration public List<JMARSScene.Layer.LayerData.TextData> text_data Field Value Type Description List < JMARSScene.Layer.LayerData.TextData >"
  },
  "api/TerrainEngine.JMARSScene.Layer.LayerData.TextData.html": {
    "href": "api/TerrainEngine.JMARSScene.Layer.LayerData.TextData.html",
    "title": "Class JMARSScene.Layer.LayerData.TextData | Planetary Parfait",
    "keywords": "Class JMARSScene.Layer.LayerData.TextData This class represents a single nomenclature object with its name and (x,z) coordinates on the terrain Inheritance System.Object JMARSScene.Layer.LayerData.TextData Namespace : TerrainEngine Assembly : cs.temp.dll.dll Syntax public class TextData Fields name Declaration public string name Field Value Type Description System.String x Declaration public double x Field Value Type Description System.Double y Declaration public double y Field Value Type Description System.Double"
  },
  "api/TerrainEngine.JMARSScene.Layer.TimeSliderData.html": {
    "href": "api/TerrainEngine.JMARSScene.Layer.TimeSliderData.html",
    "title": "Class JMARSScene.Layer.TimeSliderData | Planetary Parfait",
    "keywords": "Class JMARSScene.Layer.TimeSliderData **Not implemented Inheritance System.Object JMARSScene.Layer.TimeSliderData Namespace : TerrainEngine Assembly : cs.temp.dll.dll Syntax public class TimeSliderData Fields time_slider_img_index Declaration public int time_slider_img_index Field Value Type Description System.Int32 time_slider_img_name Declaration public string time_slider_img_name Field Value Type Description System.String"
  },
  "api/TerrainEngine.JMARSScene.Metadata.html": {
    "href": "api/TerrainEngine.JMARSScene.Metadata.html",
    "title": "Class JMARSScene.Metadata | Planetary Parfait",
    "keywords": "Class JMARSScene.Metadata Downloaded when a user logs into their JMARS account. Used to populate the custom terrains menu with the metadata variables in this class. Inheritance System.Object JMARSScene.Metadata Namespace : TerrainEngine Assembly : cs.temp.dll.dll Syntax public class Metadata Fields access_key Declaration public string access_key Field Value Type Description System.String body Declaration public string body Field Value Type Description System.String last_mod_date Declaration public string last_mod_date Field Value Type Description System.String scene_name Declaration public string scene_name Field Value Type Description System.String thumbnail Declaration public Texture2D thumbnail Field Value Type Description Texture2D"
  },
  "api/TerrainEngine.MaterialColorSetter.html": {
    "href": "api/TerrainEngine.MaterialColorSetter.html",
    "title": "Class MaterialColorSetter | Planetary Parfait",
    "keywords": "Class MaterialColorSetter Inheritance System.Object MaterialColorSetter Namespace : TerrainEngine Assembly : cs.temp.dll.dll Syntax public class MaterialColorSetter : MonoBehaviour Fields rend Declaration public Renderer rend Field Value Type Description Renderer Methods SetMaterialColor(Color) Declaration public void SetMaterialColor(Color c) Parameters Type Name Description Color c"
  },
  "api/TerrainEngine.SceneDownloader.html": {
    "href": "api/TerrainEngine.SceneDownloader.html",
    "title": "Class SceneDownloader | Planetary Parfait",
    "keywords": "Class SceneDownloader LOAD-BEARING SCRIPT. Ran on start. Inheritance System.Object SceneDownloader Namespace : TerrainEngine Assembly : cs.temp.dll.dll Syntax public class SceneDownloader : MonoBehaviour Fields _heightOffset Declaration public float _heightOffset Field Value Type Description System.Single _heightRange Declaration public float _heightRange Field Value Type Description System.Single _texture Declaration public Texture2D _texture Field Value Type Description Texture2D currentState Declaration public static SceneDownloader.SceneSession currentState Field Value Type Description SceneDownloader.SceneSession dataLayers Declaration public List<string> dataLayers Field Value Type Description List < System.String > datalayertextures Declaration public List<Texture2D> datalayertextures Field Value Type Description List < Texture2D > guid Declaration public string guid Field Value Type Description System.String heightData Declaration public float[] heightData Field Value Type Description System.Single [] imageHeight Declaration public int imageHeight Field Value Type Description System.Int32 imageWidth Declaration public int imageWidth Field Value Type Description System.Int32 nomenclature Declaration public JMARSScene.Layer.LayerData nomenclature Field Value Type Description JMARSScene.Layer.LayerData scene Declaration public JMARSScene scene Field Value Type Description JMARSScene This field contains the object of the scene downloaded from the viewScene endpoint. This scene is downloaded based on which scene button was selected from the main menu in game. singleton Declaration public static SceneDownloader singleton Field Value Type Description SceneDownloader stateChanged Declaration public UnityEvent stateChanged Field Value Type Description UnityEvent terrainURL Declaration public string terrainURL Field Value Type Description System.String userScenes Declaration public List<JMARSScene.Metadata> userScenes Field Value Type Description List < JMARSScene.Metadata > UserScene is a class defined for the viewList endpoint which contains data of all of a user's scenes. This list of userScene represents all of the data found on that endpoint. Methods ChangeState(SceneDownloader.SceneSession) Called every time a state change needs to be made. stateChanged event invoked once state has changed. Declaration public IEnumerator ChangeState(SceneDownloader.SceneSession state) Parameters Type Name Description SceneDownloader.SceneSession state Returns Type Description IEnumerator ConvertNumericData(JMARSScene.Layer.LayerData, Byte[]) Declaration public void ConvertNumericData(JMARSScene.Layer.LayerData data, byte[] byte_array) Parameters Type Name Description JMARSScene.Layer.LayerData data System.Byte [] byte_array DataToHeightMapFloat(Byte[], Int32, Int32) Convert byte data for height map into a 2D texture Declaration public Texture2D DataToHeightMapFloat(byte[] bytes, int width, int height) Parameters Type Name Description System.Byte [] bytes System.Int32 width System.Int32 height Returns Type Description Texture2D DataToHeightMapShort(Byte[], Int32, Int32) Convert byte data for height map into a 2D texture Declaration public Texture2D DataToHeightMapShort(byte[] bytes, int width, int height) Parameters Type Name Description System.Byte [] bytes System.Int32 width System.Int32 height Returns Type Description Texture2D DownloadJMARSSceneData(String) DownloadJMARSSceneData is a coroutine used for downloading the data from the viewScene api endpoint. Declaration public IEnumerator DownloadJMARSSceneData(string jsonURL) Parameters Type Name Description System.String jsonURL Returns Type Description IEnumerator DownloadNumericData(JMARSScene.Layer, Byte[]) Declaration public IEnumerator DownloadNumericData(JMARSScene.Layer layer, byte[] byte_array = null) Parameters Type Name Description JMARSScene.Layer layer System.Byte [] byte_array Returns Type Description IEnumerator DownloadRawData(String, Int32, Int32, String) Formats terrain height data based on scene datatype. Declaration public IEnumerator DownloadRawData(string url, int width, int height, string dataType) Parameters Type Name Description System.String url System.Int32 width Height Texture Width System.Int32 height Height Texture Height System.String dataType Returns Type Description IEnumerator DownloadTexture(String) Sets _texture after downloading png texture from the api endpoint Declaration public IEnumerator DownloadTexture(string url) Parameters Type Name Description System.String url Depth Image url Returns Type Description IEnumerator DownloadViewList(String, String) Tests to make sure that username and password exists in JMARS. Logs in user and downloads all custom terrains if successful, throws false username/password error otherwise. Declaration public IEnumerator DownloadViewList(string username, string password) Parameters Type Name Description System.String username System.String password Returns Type Description IEnumerator GetHeightMapRange() Declaration public float GetHeightMapRange() Returns Type Description System.Single GetOffset() Declaration public float GetOffset() Returns Type Description System.Single GetTexture() Declaration public Texture2D GetTexture() Returns Type Description Texture2D GetThumbnailData(JMARSScene.Metadata) Declaration public IEnumerator GetThumbnailData(JMARSScene.Metadata scene) Parameters Type Name Description JMARSScene.Metadata scene Returns Type Description IEnumerator"
  },
  "api/TerrainEngine.SceneDownloader.SceneSession.html": {
    "href": "api/TerrainEngine.SceneDownloader.SceneSession.html",
    "title": "Enum SceneDownloader.SceneSession | Planetary Parfait",
    "keywords": "Enum SceneDownloader.SceneSession All states for the SceneSession state machine. Namespace : TerrainEngine Assembly : cs.temp.dll.dll Syntax public enum SceneSession Fields Name Description DONE DOWNLOADING INITIAL LISTSCENES READY"
  },
  "api/TerrainEngine.SceneMaterializer.html": {
    "href": "api/TerrainEngine.SceneMaterializer.html",
    "title": "Class SceneMaterializer | Planetary Parfait",
    "keywords": "Class SceneMaterializer LOAD-BEARING SCRIPT. Ran on start. This script will replace and alter the tiles to represent the scene the user is currently on. Definition: Scene - A scene is a collection of terrain data, such as layer information, images, and depth-maps. Inheritance System.Object SceneMaterializer Namespace : TerrainEngine Assembly : cs.temp.dll.dll Syntax public class SceneMaterializer : MonoBehaviour Fields exaggerationSlider Declaration public Slider exaggerationSlider Field Value Type Description Slider heightMaterial Declaration public Material heightMaterial Field Value Type Description Material selectedScene Declaration public JMARSScene selectedScene Field Value Type Description JMARSScene singleton Declaration public static SceneMaterializer singleton Field Value Type Description SceneMaterializer terrain Declaration public GameObject terrain Field Value Type Description GameObject terrainStartingPosition Declaration public Vector3 terrainStartingPosition Field Value Type Description Vector3 tiles Declaration public GameObject tiles Field Value Type Description GameObject UnityUnitPerMeter Declaration public float UnityUnitPerMeter Field Value Type Description System.Single Methods SetMaterials(JMARSScene) Declaration public void SetMaterials(JMARSScene scene) Parameters Type Name Description JMARSScene scene"
  },
  "api/TerrainEngine.TerrainColorTextureProvider.html": {
    "href": "api/TerrainEngine.TerrainColorTextureProvider.html",
    "title": "Class TerrainColorTextureProvider | Planetary Parfait",
    "keywords": "Class TerrainColorTextureProvider Inheritance System.Object TerrainColorTextureProvider Namespace : TerrainEngine Assembly : cs.temp.dll.dll Syntax public class TerrainColorTextureProvider : MonoBehaviour Fields singleton Declaration public static TerrainColorTextureProvider singleton Field Value Type Description TerrainColorTextureProvider texture Declaration public RenderTexture texture Field Value Type Description RenderTexture Methods RemoveOldLayers() Clears quads and quad objects from the TerrainTextureProvider, preventing old layers from appearing on new terrains. Declaration public void RemoveOldLayers()"
  },
  "api/TerrainEngine.TileMaker.html": {
    "href": "api/TerrainEngine.TileMaker.html",
    "title": "Class TileMaker | Planetary Parfait",
    "keywords": "Class TileMaker Inheritance System.Object TileMaker Namespace : TerrainEngine Assembly : cs.temp.dll.dll Syntax public class TileMaker : MonoBehaviour Fields material Declaration public Material material Field Value Type Description Material numTiles Declaration public int numTiles Field Value Type Description System.Int32 rescale Declaration public bool rescale Field Value Type Description System.Boolean tileSize Declaration public int tileSize Field Value Type Description System.Int32"
  },
  "api/TerrainEngine.Tools.html": {
    "href": "api/TerrainEngine.Tools.html",
    "title": "Namespace TerrainEngine.Tools | Planetary Parfait",
    "keywords": "Namespace TerrainEngine.Tools Classes Nomenclature Components for nomenclature objects. NomenclatureDataReader PerPixelDataReader Reads numeric data by the pixel on the terrain. Pin Pin components for displaying per-pixel data. PinInfo [FEATURE ON HOLD] Designed for writing notes on per-pixel pins. PinRPCS Sends RPCs from pins between all players in a multiuser room. ScaleBar This script deals with generating the scale values used for each terrain dynamically for the scalebar tool. It functions by using a ScalebarPrefab, which is spawned into the scene and is scaled dynamically depending on the terrain's dimensions. ScaleBar.ScaleBarPrefab"
  },
  "api/TerrainEngine.Tools.Nomenclature.html": {
    "href": "api/TerrainEngine.Tools.Nomenclature.html",
    "title": "Class Nomenclature | Planetary Parfait",
    "keywords": "Class Nomenclature Components for nomenclature objects. Inheritance System.Object Nomenclature Namespace : TerrainEngine.Tools Assembly : cs.temp.dll.dll Syntax public class Nomenclature : MonoBehaviour Fields cube Declaration public Material cube Field Value Type Description Material panel Declaration public GameObject panel Field Value Type Description GameObject panelImage Declaration public Image panelImage Field Value Type Description Image panelText Declaration public TMP_Text panelText Field Value Type Description TMP_Text pin Declaration public GameObject pin Field Value Type Description GameObject pinMarker Declaration public Material pinMarker Field Value Type Description Material position Declaration public Vector3 position Field Value Type Description Vector3 Methods SetMaterials() Declaration public void SetMaterials() SetText(String) Declaration public void SetText(string text) Parameters Type Name Description System.String text"
  },
  "api/TerrainEngine.Tools.NomenclatureDataReader.html": {
    "href": "api/TerrainEngine.Tools.NomenclatureDataReader.html",
    "title": "Class NomenclatureDataReader | Planetary Parfait",
    "keywords": "Class NomenclatureDataReader Inheritance System.Object NomenclatureDataReader Namespace : TerrainEngine.Tools Assembly : cs.temp.dll.dll Syntax public class NomenclatureDataReader : MonoBehaviour Fields hasNomenclature Declaration public bool hasNomenclature Field Value Type Description System.Boolean material Declaration public Material material Field Value Type Description Material nomenclatureParent Declaration public GameObject nomenclatureParent Field Value Type Description GameObject nomenclaturePins Declaration public List<Nomenclature> nomenclaturePins Field Value Type Description List < Nomenclature > nomenclaturePrefab Declaration public GameObject nomenclaturePrefab Field Value Type Description GameObject pinPrefab Declaration public GameObject pinPrefab Field Value Type Description GameObject platform Declaration public GameObject platform Field Value Type Description GameObject singleton Declaration public static NomenclatureDataReader singleton Field Value Type Description NomenclatureDataReader terrain Declaration public GameObject terrain Field Value Type Description GameObject Methods DeleteNomenclature() Deletes nomenclature gameObjects and clears nomenclature data list. Declaration public void DeleteNomenclature() DisablePins() Disables all pins in a scene. Prevents issues with NetworkObjects when a user is joining a room. Declaration public void DisablePins() EnablePins() Enables all pins in scene. Prevents issues with NetworkObjects when a user is joining a room. Declaration public void EnablePins() InstantiateNomenclature(JMARSScene.Layer.LayerData) Instantiates nomenclature data on terrain selection. Declaration public void InstantiateNomenclature(JMARSScene.Layer.LayerData data) Parameters Type Name Description JMARSScene.Layer.LayerData data Nomenclature Layer Data"
  },
  "api/TerrainEngine.Tools.PerPixelDataReader.html": {
    "href": "api/TerrainEngine.Tools.PerPixelDataReader.html",
    "title": "Class PerPixelDataReader | Planetary Parfait",
    "keywords": "Class PerPixelDataReader Reads numeric data by the pixel on the terrain. Inheritance System.Object PerPixelDataReader Namespace : TerrainEngine.Tools Assembly : cs.temp.dll.dll Syntax public class PerPixelDataReader : MonoBehaviour Fields byteArrays Declaration public static List<byte[]> byteArrays Field Value Type Description List < System.Byte []> byteDataNames Declaration public static List<string> byteDataNames Field Value Type Description List < System.String > byteDataUnits Declaration public static List<string> byteDataUnits Field Value Type Description List < System.String > byteOutput Declaration public static string byteOutput Field Value Type Description System.String floatArrays Declaration public static List<float[]> floatArrays Field Value Type Description List < System.Single []> floatDataNames Declaration public static List<string> floatDataNames Field Value Type Description List < System.String > floatDataUnits Declaration public static List<string> floatDataUnits Field Value Type Description List < System.String > floatOutput Declaration public static string floatOutput Field Value Type Description System.String intArrays Declaration public static List<int[]> intArrays Field Value Type Description List < System.Int32 []> intDataNames Declaration public static List<string> intDataNames Field Value Type Description List < System.String > intDataUnits Declaration public static List<string> intDataUnits Field Value Type Description List < System.String > intOutput Declaration public static string intOutput Field Value Type Description System.String material Declaration public Material material Field Value Type Description Material pinList Declaration public static List<Pin> pinList Field Value Type Description List < Pin > pins Declaration public GameObject pins Field Value Type Description GameObject readingData True if per-pixel tool is enabled, false otherwise. Declaration public bool readingData Field Value Type Description System.Boolean shortArrays Declaration public static List<short[]> shortArrays Field Value Type Description List < System.Int16 []> shortDataNames Declaration public static List<string> shortDataNames Field Value Type Description List < System.String > shortDataUnits Declaration public static List<string> shortDataUnits Field Value Type Description List < System.String > shortOutput Declaration public static string shortOutput Field Value Type Description System.String singleton Declaration public static PerPixelDataReader singleton Field Value Type Description PerPixelDataReader terrain Declaration public GameObject terrain Field Value Type Description GameObject Methods CalculateRay() Creates raycast from user's mouse/controller to the terrain. Declaration public void CalculateRay() ClearPerPixelData() Clears all Per Pixel Data Declaration public void ClearPerPixelData() CreatePin(Vector3, String) Declaration public Pin CreatePin(Vector3 position, string data) Parameters Type Name Description Vector3 position System.String data Returns Type Description Pin DisablePins() Disables all pins in a scene. Prevents issues with NetworkObjects when a user is joining a room. Declaration public void DisablePins() EnablePins() Enables all pins in scene. Prevents issues with NetworkObjects when a user is joining a room. Declaration public void EnablePins() RemoveMyPins() Utilized for deleting specific user pins based on their GUID in multiplayer Declaration public void RemoveMyPins() RemoveOldPins() Removes all pins from a terrain in singleplayer. Declaration public void RemoveOldPins() RemovePinsWithGuid(String) Deletes all pins that have the passed-in guid in multiplayer. Declaration public void RemovePinsWithGuid(string guid) Parameters Type Name Description System.String guid Client GUID SpawnPin(Vector3, String, String) Spawns a Guest pin in Multiplayer. Declaration public void SpawnPin(Vector3 position, string data, string guid) Parameters Type Name Description Vector3 position Pin position in world space coordinates System.String data Pin data System.String guid Guid for player that spawned the pin"
  },
  "api/TerrainEngine.Tools.Pin.html": {
    "href": "api/TerrainEngine.Tools.Pin.html",
    "title": "Class Pin | Planetary Parfait",
    "keywords": "Class Pin Pin components for displaying per-pixel data. Inheritance System.Object Pin Namespace : TerrainEngine.Tools Assembly : cs.temp.dll.dll Syntax public class Pin : NetworkBehaviour Fields clientID Declaration public ulong clientID Field Value Type Description System.UInt64 data Declaration public string data Field Value Type Description System.String guid Declaration public string guid Field Value Type Description System.String number Declaration public string number Field Value Type Description System.String panel Declaration public GameObject panel Field Value Type Description GameObject pin Declaration public GameObject pin Field Value Type Description GameObject pinData Declaration public TMP_Text pinData Field Value Type Description TMP_Text pinNumber Declaration public TMP_Text pinNumber Field Value Type Description TMP_Text position Declaration public Vector3 position Field Value Type Description Vector3"
  },
  "api/TerrainEngine.Tools.PinInfo.html": {
    "href": "api/TerrainEngine.Tools.PinInfo.html",
    "title": "Class PinInfo | Planetary Parfait",
    "keywords": "Class PinInfo [FEATURE ON HOLD] Designed for writing notes on per-pixel pins. Inheritance System.Object PinInfo Namespace : TerrainEngine.Tools Assembly : cs.temp.dll.dll Syntax public class PinInfo : MonoBehaviour Methods CloseVRKeyboard(GameObject) Declaration public void CloseVRKeyboard(GameObject inputField) Parameters Type Name Description GameObject inputField OpenVRKeyboard(GameObject) Declaration public void OpenVRKeyboard(GameObject inputField) Parameters Type Name Description GameObject inputField"
  },
  "api/TerrainEngine.Tools.PinRPCS.html": {
    "href": "api/TerrainEngine.Tools.PinRPCS.html",
    "title": "Class PinRPCS | Planetary Parfait",
    "keywords": "Class PinRPCS Sends RPCs from pins between all players in a multiuser room. Inheritance System.Object PinRPCS Namespace : TerrainEngine.Tools Assembly : cs.temp.dll.dll Syntax public class PinRPCS : NetworkBehaviour Methods PinServerRpc(Vector3, String, String, ServerRpcParams) Sends an RPC to place a pin for all clients in the multiuser server. Declaration public void PinServerRpc(Vector3 position, string data, string guid, ServerRpcParams serverRpcParams = null) Parameters Type Name Description Vector3 position Pin's world-space position System.String data Pin Data System.String guid ID of the client that placed the pin ServerRpcParams serverRpcParams RPC settings for the multiuser server RemovePinServerRpc(String, ServerRpcParams) Sends an RPC to destroy a pin for all clients in the multiuser server. Declaration public void RemovePinServerRpc(string guid, ServerRpcParams serverRpcParams = null) Parameters Type Name Description System.String guid ID of the client that placed the pin ServerRpcParams serverRpcParams RPC settings for the multiuser server"
  },
  "api/TerrainEngine.Tools.ScaleBar.html": {
    "href": "api/TerrainEngine.Tools.ScaleBar.html",
    "title": "Class ScaleBar | Planetary Parfait",
    "keywords": "Class ScaleBar This script deals with generating the scale values used for each terrain dynamically for the scalebar tool. It functions by using a ScalebarPrefab, which is spawned into the scene and is scaled dynamically depending on the terrain's dimensions. Inheritance System.Object ScaleBar Namespace : TerrainEngine.Tools Assembly : cs.temp.dll.dll Syntax public class ScaleBar : MonoBehaviour Fields _SampleTerrainsMenu Declaration public SampleTerrainsMenu _SampleTerrainsMenu Field Value Type Description SampleTerrainsMenu bars Declaration public List<ScaleBar.ScaleBarPrefab> bars Field Value Type Description List < ScaleBar.ScaleBarPrefab > controlCheck Declaration public XRController controlCheck Field Value Type Description XRController heightTexture Declaration public Texture2D heightTexture Field Value Type Description Texture2D material Declaration public Material material Field Value Type Description Material menuText Declaration public TextMeshProUGUI menuText Field Value Type Description TextMeshProUGUI scalebarMode Declaration public bool scalebarMode Field Value Type Description System.Boolean singleton Declaration public static ScaleBar singleton Field Value Type Description ScaleBar terrain Declaration public GameObject terrain Field Value Type Description GameObject valueToRoundTo Declaration public int valueToRoundTo Field Value Type Description System.Int32 Methods CalculatePrefabs(JMARSScene) Calculates the 5 scalebar prefabs by finding the min, max, and in-between values. Sets these values to the scalebar's \"realWorldHeight\", which is used to calculate the \"scale\" variable. Declaration public void CalculatePrefabs(JMARSScene scene) Parameters Type Name Description JMARSScene scene CalculateRay() Creates raycast from user's mouse/controller to the terrain. Depending if intersecting with the terrain or not, run code for functionality Declaration public void CalculateRay() DeterminePlayerRay() Determines what type of raycast to use depending on what platform they are on (VR, Desktop) Declaration public void DeterminePlayerRay() ToggleScalebarMode() Toggles scalebar mode when user clicks UI button via desktop/VR Declaration public void ToggleScalebarMode() UpdateLabelText(TextMeshPro) When a scalebar's label is changed, it updates the text on the Scalebar GameObject Declaration public void UpdateLabelText(TextMeshPro text) Parameters Type Name Description TextMeshPro text"
  },
  "api/TerrainEngine.Tools.ScaleBar.ScaleBarPrefab.html": {
    "href": "api/TerrainEngine.Tools.ScaleBar.ScaleBarPrefab.html",
    "title": "Class ScaleBar.ScaleBarPrefab | Planetary Parfait",
    "keywords": "Class ScaleBar.ScaleBarPrefab Inheritance System.Object ScaleBar.ScaleBarPrefab Namespace : TerrainEngine.Tools Assembly : cs.temp.dll.dll Syntax [Serializable] public class ScaleBarPrefab Fields label Declaration public string label Field Value Type Description System.String prefab Declaration public GameObject prefab Field Value Type Description GameObject realWorldHeight Declaration public float realWorldHeight Field Value Type Description System.Single"
  },
  "api/UserInterface.ChangeButtonImage.html": {
    "href": "api/UserInterface.ChangeButtonImage.html",
    "title": "Class ChangeButtonImage | Planetary Parfait",
    "keywords": "Class ChangeButtonImage This script is used to handle UI related to image layers. Inheritance System.Object ChangeButtonImage Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public class ChangeButtonImage : MonoBehaviour Fields button Declaration public Toggle button Field Value Type Description Toggle image1 Declaration public Sprite image1 Field Value Type Description Sprite image2 Declaration public Sprite image2 Field Value Type Description Sprite usingImage1 Declaration public bool usingImage1 Field Value Type Description System.Boolean Methods ChangeImage() Declaration public void ChangeImage()"
  },
  "api/UserInterface.ColorPicker.html": {
    "href": "api/UserInterface.ColorPicker.html",
    "title": "Class ColorPicker | Planetary Parfait",
    "keywords": "Class ColorPicker Inheritance System.Object ColorPicker Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public class ColorPicker : MonoBehaviour Fields colorWheel Declaration public Image colorWheel Field Value Type Description Image currentColorGO Declaration public Image currentColorGO Field Value Type Description Image rt Declaration public RectTransform rt Field Value Type Description RectTransform scaleBarMat Declaration public Material scaleBarMat Field Value Type Description Material selectedColor Declaration public Color selectedColor Field Value Type Description Color selectedColorGO Declaration public Image selectedColorGO Field Value Type Description Image Methods ResetColor() Declaration public void ResetColor()"
  },
  "api/UserInterface.ConfirmQuit.html": {
    "href": "api/UserInterface.ConfirmQuit.html",
    "title": "Class ConfirmQuit | Planetary Parfait",
    "keywords": "Class ConfirmQuit Inheritance System.Object Menu ConfirmQuit Inherited Members Menu.LockCursor Menu.parentObject Menu.player Menu.vrKeyboard Menu.PreviousMenu Menu.Start() Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public class ConfirmQuit : Menu Fields quitButton Declaration public Button quitButton Field Value Type Description Button returnButton Declaration public Button returnButton Field Value Type Description Button Properties Instance Declaration public static ConfirmQuit Instance { get; set; } Property Value Type Description ConfirmQuit Methods SetListeners() Declaration public override void SetListeners() Overrides Menu.SetListeners() ToggleMenu(Boolean) Declaration public override void ToggleMenu(bool active) Parameters Type Name Description System.Boolean active Overrides Menu.ToggleMenu(Boolean)"
  },
  "api/UserInterface.html": {
    "href": "api/UserInterface.html",
    "title": "Namespace UserInterface | Planetary Parfait",
    "keywords": "Namespace UserInterface Classes ChangeButtonImage This script is used to handle UI related to image layers. ColorPicker ConfirmQuit InfoPanel KeyboardController LoadingBar Login MainMenu Menu MultiuserMenu SampleTerrainsMenu SettingsController SwitchTutorialMenu TerrainMenu TerrainTools Delegates LoadingBar.LoadingBarDelegate Loading Bar delegate handles all calls and updated to the loading bar menu Login.LoginDelegate Menu.MenuDelegate Menu.TextDelegate Menu.ToggleDelegate SettingsController.SettingsDelegate TerrainMenu.LayersDelegate TerrainMenu.SceneDelegate"
  },
  "api/UserInterface.InfoPanel.html": {
    "href": "api/UserInterface.InfoPanel.html",
    "title": "Class InfoPanel | Planetary Parfait",
    "keywords": "Class InfoPanel Inheritance System.Object InfoPanel Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public class InfoPanel : MonoBehaviour Fields bodyText Declaration public TMP_Text bodyText Field Value Type Description TMP_Text dimensionText Declaration public TMP_Text dimensionText Field Value Type Description TMP_Text dimmedColor Declaration public Color dimmedColor Field Value Type Description Color exagText Declaration public TMP_Text exagText Field Value Type Description TMP_Text Panel Declaration public static InfoPanel Panel Field Value Type Description InfoPanel panelObj Declaration public GameObject panelObj Field Value Type Description GameObject terrainNameText Declaration public TMP_Text terrainNameText Field Value Type Description TMP_Text undimmedColor Declaration public Color undimmedColor Field Value Type Description Color Methods ChangeExaggeration(Single) Called on the exaggeration Slider's OnValueChanged() Event Declaration public void ChangeExaggeration(float value) Parameters Type Name Description System.Single value DimText(Boolean) Dims text on the info panel for VR users when they are using various tools on the toolbar. Declaration public void DimText(bool active) Parameters Type Name Description System.Boolean active True if toolbar panels are open, false otherwise. TogglePanel(Boolean) Declaration public void TogglePanel(bool active) Parameters Type Name Description System.Boolean active UpdateInfo(JMARSScene) Updates data on info panel Declaration public void UpdateInfo(JMARSScene scene) Parameters Type Name Description JMARSScene scene Selected JMARS terrain."
  },
  "api/UserInterface.KeyboardController.html": {
    "href": "api/UserInterface.KeyboardController.html",
    "title": "Class KeyboardController | Planetary Parfait",
    "keywords": "Class KeyboardController Inheritance System.Object KeyboardController Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public class KeyboardController : MonoBehaviour Fields Instance Declaration public static KeyboardController Instance Field Value Type Description KeyboardController Methods CloseVRKeyboard() Declaration public void CloseVRKeyboard() OpenVRKeyboard(TMP_InputField) Declaration public void OpenVRKeyboard(TMP_InputField vrKeyboardInputField) Parameters Type Name Description TMP_InputField vrKeyboardInputField"
  },
  "api/UserInterface.LoadingBar.html": {
    "href": "api/UserInterface.LoadingBar.html",
    "title": "Class LoadingBar | Planetary Parfait",
    "keywords": "Class LoadingBar Inheritance System.Object Menu LoadingBar Inherited Members Menu.LockCursor Menu.parentObject Menu.player Menu.vrKeyboard Menu.PreviousMenu Menu.Start() Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public class LoadingBar : Menu Fields Abort Declaration public static bool Abort Field Value Type Description System.Boolean exitButton Declaration public Button exitButton Field Value Type Description Button loadingBar Declaration public Slider loadingBar Field Value Type Description Slider loadingPercent Declaration public TMP_Text loadingPercent Field Value Type Description TMP_Text loadingText Declaration public TMP_Text loadingText Field Value Type Description TMP_Text Properties DoneLoading Declaration public static LoadingBar.LoadingBarDelegate DoneLoading { get; } Property Value Type Description LoadingBar.LoadingBarDelegate Loading Declaration public static LoadingBar.LoadingBarDelegate Loading { get; } Property Value Type Description LoadingBar.LoadingBarDelegate OpenMenu Declaration public static Menu.ToggleDelegate OpenMenu { get; } Property Value Type Description Menu.ToggleDelegate Methods SetListeners() Declaration public override void SetListeners() Overrides Menu.SetListeners() ToggleMenu(Boolean) Declaration public override void ToggleMenu(bool active) Parameters Type Name Description System.Boolean active Overrides Menu.ToggleMenu(Boolean)"
  },
  "api/UserInterface.LoadingBar.LoadingBarDelegate.html": {
    "href": "api/UserInterface.LoadingBar.LoadingBarDelegate.html",
    "title": "Delegate LoadingBar.LoadingBarDelegate | Planetary Parfait",
    "keywords": "Delegate LoadingBar.LoadingBarDelegate Loading Bar delegate handles all calls and updated to the loading bar menu Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public delegate void LoadingBarDelegate(float value = 0F, string text = \"\"); Parameters Type Name Description System.Single value System.String text"
  },
  "api/UserInterface.Login.html": {
    "href": "api/UserInterface.Login.html",
    "title": "Class Login | Planetary Parfait",
    "keywords": "Class Login Inheritance System.Object Menu Login Inherited Members Menu.LockCursor Menu.parentObject Menu.player Menu.vrKeyboard Menu.PreviousMenu Menu.Start() Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public class Login : Menu Fields loginButton Declaration public Button loginButton Field Value Type Description Button notificationText Declaration public TMP_Text notificationText Field Value Type Description TMP_Text password Declaration public static string password Field Value Type Description System.String passwordField Declaration public TMP_InputField passwordField Field Value Type Description TMP_InputField signInBackButton Declaration public Button signInBackButton Field Value Type Description Button username Declaration public static string username Field Value Type Description System.String usernameField Declaration public TMP_InputField usernameField Field Value Type Description TMP_InputField Properties FailedLogin Declaration public static Login.LoginDelegate FailedLogin { get; } Property Value Type Description Login.LoginDelegate TryLogin Declaration public static Menu.MenuDelegate TryLogin { get; } Property Value Type Description Menu.MenuDelegate Methods SetListeners() Declaration public override void SetListeners() Overrides Menu.SetListeners() ToggleMenu(Boolean) Declaration public override void ToggleMenu(bool active) Parameters Type Name Description System.Boolean active Overrides Menu.ToggleMenu(Boolean)"
  },
  "api/UserInterface.Login.LoginDelegate.html": {
    "href": "api/UserInterface.Login.LoginDelegate.html",
    "title": "Delegate Login.LoginDelegate | Planetary Parfait",
    "keywords": "Delegate Login.LoginDelegate Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public delegate void LoginDelegate(UnityWebRequest.Result result); Parameters Type Name Description UnityWebRequest.Result result"
  },
  "api/UserInterface.MainMenu.html": {
    "href": "api/UserInterface.MainMenu.html",
    "title": "Class MainMenu | Planetary Parfait",
    "keywords": "Class MainMenu Inheritance System.Object Menu MainMenu Inherited Members Menu.LockCursor Menu.parentObject Menu.player Menu.vrKeyboard Menu.PreviousMenu Menu.Start() Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public class MainMenu : Menu Fields customTerrainButton Declaration public Button customTerrainButton Field Value Type Description Button exitToDesktopButton Declaration public Button exitToDesktopButton Field Value Type Description Button exitToGameButton Declaration public Button exitToGameButton Field Value Type Description Button multiuserButton Declaration public Button multiuserButton Field Value Type Description Button PrimaryMenus Declaration public GameObject PrimaryMenus Field Value Type Description GameObject sampleTerrainButton Declaration public Button sampleTerrainButton Field Value Type Description Button Properties Instance Declaration public static MainMenu Instance { get; } Property Value Type Description MainMenu OpenMenu Declaration public static Menu.ToggleDelegate OpenMenu { get; } Property Value Type Description Menu.ToggleDelegate OpenPrimaryMenus Declaration public static Menu.ToggleDelegate OpenPrimaryMenus { get; } Property Value Type Description Menu.ToggleDelegate Methods CloseAllMenus() Declaration public void CloseAllMenus() SetListeners() Declaration public override void SetListeners() Overrides Menu.SetListeners() ToggleMenu(Boolean) Declaration public override void ToggleMenu(bool active) Parameters Type Name Description System.Boolean active Overrides Menu.ToggleMenu(Boolean)"
  },
  "api/UserInterface.Menu.html": {
    "href": "api/UserInterface.Menu.html",
    "title": "Class Menu | Planetary Parfait",
    "keywords": "Class Menu Inheritance System.Object Menu ConfirmQuit LoadingBar Login MainMenu MultiuserMenu SampleTerrainsMenu SettingsController TerrainMenu TerrainTools Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public class Menu : MonoBehaviour Fields parentObject Declaration public GameObject parentObject Field Value Type Description GameObject player Declaration public GameObject player Field Value Type Description GameObject PreviousMenu Declaration protected static Menu PreviousMenu Field Value Type Description Menu vrKeyboard Declaration public VRUIKeyboard vrKeyboard Field Value Type Description VRUIKeyboard Properties LockCursor Declaration public static Menu.ToggleDelegate LockCursor { get; } Property Value Type Description Menu.ToggleDelegate Methods SetListeners() Declaration public virtual void SetListeners() Start() Declaration public virtual void Start() ToggleMenu(Boolean) Declaration public virtual void ToggleMenu(bool active) Parameters Type Name Description System.Boolean active"
  },
  "api/UserInterface.Menu.MenuDelegate.html": {
    "href": "api/UserInterface.Menu.MenuDelegate.html",
    "title": "Delegate Menu.MenuDelegate | Planetary Parfait",
    "keywords": "Delegate Menu.MenuDelegate Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public delegate void MenuDelegate();"
  },
  "api/UserInterface.Menu.TextDelegate.html": {
    "href": "api/UserInterface.Menu.TextDelegate.html",
    "title": "Delegate Menu.TextDelegate | Planetary Parfait",
    "keywords": "Delegate Menu.TextDelegate Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public delegate void TextDelegate(string header, string text); Parameters Type Name Description System.String header System.String text"
  },
  "api/UserInterface.Menu.ToggleDelegate.html": {
    "href": "api/UserInterface.Menu.ToggleDelegate.html",
    "title": "Delegate Menu.ToggleDelegate | Planetary Parfait",
    "keywords": "Delegate Menu.ToggleDelegate Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public delegate void ToggleDelegate(bool active); Parameters Type Name Description System.Boolean active"
  },
  "api/UserInterface.MultiuserMenu.html": {
    "href": "api/UserInterface.MultiuserMenu.html",
    "title": "Class MultiuserMenu | Planetary Parfait",
    "keywords": "Class MultiuserMenu Inheritance System.Object Menu MultiuserMenu Inherited Members Menu.LockCursor Menu.parentObject Menu.player Menu.vrKeyboard Menu.PreviousMenu Menu.Start() Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public class MultiuserMenu : Menu Fields backButtonMenu Declaration public Button backButtonMenu Field Value Type Description Button backInputMenu Declaration public Button backInputMenu Field Value Type Description Button bottomButton Declaration public Button bottomButton Field Value Type Description Button buttonHeader Declaration public TMP_Text buttonHeader Field Value Type Description TMP_Text buttonMenu Declaration public GameObject buttonMenu Field Value Type Description GameObject canEnter Declaration public bool canEnter Field Value Type Description System.Boolean canTab Declaration public bool canTab Field Value Type Description System.Boolean enterButton Declaration public Button enterButton Field Value Type Description Button errorButton Declaration public Button errorButton Field Value Type Description Button errorHeader Declaration public TMP_Text errorHeader Field Value Type Description TMP_Text errorMenu Declaration public GameObject errorMenu Field Value Type Description GameObject errorText Declaration public TMP_Text errorText Field Value Type Description TMP_Text inputHeader Declaration public TMP_Text inputHeader Field Value Type Description TMP_Text inputMenu Declaration public GameObject inputMenu Field Value Type Description GameObject instructions Declaration public TMP_Text instructions Field Value Type Description TMP_Text isHosting Declaration public bool isHosting Field Value Type Description System.Boolean lowerDescription Declaration public TMP_Text lowerDescription Field Value Type Description TMP_Text lowerField Declaration public TMP_InputField lowerField Field Value Type Description TMP_InputField notificationText Declaration public TMP_Text notificationText Field Value Type Description TMP_Text topButton Declaration public Button topButton Field Value Type Description Button upperDescription Declaration public TMP_Text upperDescription Field Value Type Description TMP_Text upperField Declaration public TMP_InputField upperField Field Value Type Description TMP_InputField Properties Instance Declaration public static MultiuserMenu Instance { get; } Property Value Type Description MultiuserMenu OpenMenu Declaration public static Menu.ToggleDelegate OpenMenu { get; } Property Value Type Description Menu.ToggleDelegate SetMultiplayerMenu Declaration public static Menu.MenuDelegate SetMultiplayerMenu { get; } Property Value Type Description Menu.MenuDelegate TextMessage Declaration public static Menu.TextDelegate TextMessage { get; } Property Value Type Description Menu.TextDelegate Methods ErrorMessage(String, String) Declaration public void ErrorMessage(string errorType, string errorMessage) Parameters Type Name Description System.String errorType System.String errorMessage SetListeners() Declaration public override void SetListeners() Overrides Menu.SetListeners() ToggleMenu(Boolean) Declaration public override void ToggleMenu(bool active) Parameters Type Name Description System.Boolean active Overrides Menu.ToggleMenu(Boolean)"
  },
  "api/UserInterface.SampleTerrainsMenu.html": {
    "href": "api/UserInterface.SampleTerrainsMenu.html",
    "title": "Class SampleTerrainsMenu | Planetary Parfait",
    "keywords": "Class SampleTerrainsMenu Inheritance System.Object Menu SampleTerrainsMenu Inherited Members Menu.LockCursor Menu.parentObject Menu.player Menu.vrKeyboard Menu.PreviousMenu Menu.Start() Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public class SampleTerrainsMenu : Menu Fields exitToGameButton Declaration public Button exitToGameButton Field Value Type Description Button exitToMenuButton Declaration public Button exitToMenuButton Field Value Type Description Button loadedSampleTerrain Declaration public bool loadedSampleTerrain Field Value Type Description System.Boolean terrainButtons Declaration public List<Button> terrainButtons Field Value Type Description List < Button > Properties OpenMenu Declaration public static Menu.ToggleDelegate OpenMenu { get; } Property Value Type Description Menu.ToggleDelegate Methods SetListeners() Declaration public override void SetListeners() Overrides Menu.SetListeners() ToggleMenu(Boolean) Declaration public override void ToggleMenu(bool active) Parameters Type Name Description System.Boolean active Overrides Menu.ToggleMenu(Boolean)"
  },
  "api/UserInterface.SettingsController.html": {
    "href": "api/UserInterface.SettingsController.html",
    "title": "Class SettingsController | Planetary Parfait",
    "keywords": "Class SettingsController Inheritance System.Object Menu SettingsController Inherited Members Menu.LockCursor Menu.parentObject Menu.player Menu.vrKeyboard Menu.PreviousMenu Menu.Start() Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public class SettingsController : Menu Fields exitButton Declaration public UnityEngine.UI.Button exitButton Field Value Type Description UnityEngine.UI.Button mouseSen Declaration public float mouseSen Field Value Type Description System.Single mouseSlider Declaration public GameObject mouseSlider Field Value Type Description GameObject OpenMenu Declaration public static Menu.ToggleDelegate OpenMenu Field Value Type Description Menu.ToggleDelegate platformSlider Declaration public Slider platformSlider Field Value Type Description Slider platformSpeed Declaration public float platformSpeed Field Value Type Description System.Single rotateSlider Declaration public GameObject rotateSlider Field Value Type Description GameObject safeModeSettings Declaration public GameObject safeModeSettings Field Value Type Description GameObject vrPlayer Declaration public XRController vrPlayer Field Value Type Description XRController Properties MouseSensitivity Declaration public static SettingsController.SettingsDelegate MouseSensitivity { get; } Property Value Type Description SettingsController.SettingsDelegate PlatformSpeed Declaration public static SettingsController.SettingsDelegate PlatformSpeed { get; } Property Value Type Description SettingsController.SettingsDelegate Methods SetListeners() Declaration public override void SetListeners() Overrides Menu.SetListeners() ToggleMenu(Boolean) Declaration public override void ToggleMenu(bool active) Parameters Type Name Description System.Boolean active Overrides Menu.ToggleMenu(Boolean)"
  },
  "api/UserInterface.SettingsController.SettingsDelegate.html": {
    "href": "api/UserInterface.SettingsController.SettingsDelegate.html",
    "title": "Delegate SettingsController.SettingsDelegate | Planetary Parfait",
    "keywords": "Delegate SettingsController.SettingsDelegate Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public delegate float SettingsDelegate(); Returns Type Description System.Single"
  },
  "api/UserInterface.SwitchTutorialMenu.html": {
    "href": "api/UserInterface.SwitchTutorialMenu.html",
    "title": "Class SwitchTutorialMenu | Planetary Parfait",
    "keywords": "Class SwitchTutorialMenu Inheritance System.Object SwitchTutorialMenu Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public class SwitchTutorialMenu : MonoBehaviour Fields bottomText Declaration public TMP_Text bottomText Field Value Type Description TMP_Text desktopText Declaration public string desktopText Field Value Type Description System.String desktopVideo Declaration public VideoClip desktopVideo Field Value Type Description VideoClip videoPlayer Declaration public VideoPlayer videoPlayer Field Value Type Description VideoPlayer vrText Declaration public string vrText Field Value Type Description System.String vrVideo Declaration public VideoClip vrVideo Field Value Type Description VideoClip"
  },
  "api/UserInterface.TerrainMenu.html": {
    "href": "api/UserInterface.TerrainMenu.html",
    "title": "Class TerrainMenu | Planetary Parfait",
    "keywords": "Class TerrainMenu Inheritance System.Object Menu TerrainMenu Inherited Members Menu.LockCursor Menu.parentObject Menu.player Menu.vrKeyboard Menu.PreviousMenu Menu.Start() Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public class TerrainMenu : Menu Fields backToGameButton Declaration public Button backToGameButton Field Value Type Description Button backToMenuButton Declaration public Button backToMenuButton Field Value Type Description Button ExagParent Declaration public GameObject ExagParent Field Value Type Description GameObject LayersParent Declaration public GameObject LayersParent Field Value Type Description GameObject LayersPrefab Declaration public GameObject LayersPrefab Field Value Type Description GameObject OpenMenu Declaration public static Menu.ToggleDelegate OpenMenu Field Value Type Description Menu.ToggleDelegate refreshButton Declaration public Button refreshButton Field Value Type Description Button SceneParent Declaration public GameObject SceneParent Field Value Type Description GameObject ScenePrefab Declaration public GameObject ScenePrefab Field Value Type Description GameObject Properties layersDelegate Declaration public static TerrainMenu.LayersDelegate layersDelegate { get; } Property Value Type Description TerrainMenu.LayersDelegate sceneDelegate Declaration public static TerrainMenu.SceneDelegate sceneDelegate { get; } Property Value Type Description TerrainMenu.SceneDelegate Methods SetListeners() Declaration public override void SetListeners() Overrides Menu.SetListeners() ToggleMenu(Boolean) Declaration public override void ToggleMenu(bool active) Parameters Type Name Description System.Boolean active Overrides Menu.ToggleMenu(Boolean)"
  },
  "api/UserInterface.TerrainMenu.LayersDelegate.html": {
    "href": "api/UserInterface.TerrainMenu.LayersDelegate.html",
    "title": "Delegate TerrainMenu.LayersDelegate | Planetary Parfait",
    "keywords": "Delegate TerrainMenu.LayersDelegate Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public delegate void LayersDelegate(JMARSScene scene); Parameters Type Name Description JMARSScene scene"
  },
  "api/UserInterface.TerrainMenu.SceneDelegate.html": {
    "href": "api/UserInterface.TerrainMenu.SceneDelegate.html",
    "title": "Delegate TerrainMenu.SceneDelegate | Planetary Parfait",
    "keywords": "Delegate TerrainMenu.SceneDelegate Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public delegate void SceneDelegate(List<JMARSScene.Metadata> scene); Parameters Type Name Description List < JMARSScene.Metadata > scene"
  },
  "api/UserInterface.TerrainTools.html": {
    "href": "api/UserInterface.TerrainTools.html",
    "title": "Class TerrainTools | Planetary Parfait",
    "keywords": "Class TerrainTools Inheritance System.Object Menu TerrainTools Inherited Members Menu.LockCursor Menu.parentObject Menu.player Menu.vrKeyboard Menu.PreviousMenu Menu.Start() Namespace : UserInterface Assembly : cs.temp.dll.dll Syntax public class TerrainTools : Menu Fields clearAllPins Declaration public Button clearAllPins Field Value Type Description Button clearMyPins Declaration public Button clearMyPins Field Value Type Description Button colorPickerPanel Declaration public GameObject colorPickerPanel Field Value Type Description GameObject firstTutorial Declaration public GameObject firstTutorial Field Value Type Description GameObject generalTip Declaration public TMP_Text generalTip Field Value Type Description TMP_Text helpButton Declaration public Button helpButton Field Value Type Description Button highlightColor Declaration public Color highlightColor Field Value Type Description Color layersButton Declaration public Button layersButton Field Value Type Description Button leftSideTools Declaration public GameObject leftSideTools Field Value Type Description GameObject multiplayerButton Declaration public Button multiplayerButton Field Value Type Description Button perPixelButton Declaration public Button perPixelButton Field Value Type Description Button perPixelData Declaration public TMP_Text perPixelData Field Value Type Description TMP_Text perPixelHeader Declaration public TMP_Text perPixelHeader Field Value Type Description TMP_Text perPixelPanel Declaration public GameObject perPixelPanel Field Value Type Description GameObject resetPosition Declaration public Button resetPosition Field Value Type Description Button roomCodePanel Declaration public GameObject roomCodePanel Field Value Type Description GameObject roomCodeText Declaration public TMP_Text roomCodeText Field Value Type Description TMP_Text scaleBarButton Declaration public Button scaleBarButton Field Value Type Description Button scaleBarPanel Declaration public GameObject scaleBarPanel Field Value Type Description GameObject settingButton Declaration public Button settingButton Field Value Type Description Button shiftImg Declaration public Image shiftImg Field Value Type Description Image tabImg Declaration public Image tabImg Field Value Type Description Image terrainLayers Declaration public GameObject terrainLayers Field Value Type Description GameObject terrainMenuButton Declaration public Button terrainMenuButton Field Value Type Description Button Properties DynamicReadout Declaration public static Menu.TextDelegate DynamicReadout { get; } Property Value Type Description Menu.TextDelegate Instance Declaration public static TerrainTools Instance { get; } Property Value Type Description TerrainTools OpenMenu Declaration public static Menu.ToggleDelegate OpenMenu { get; } Property Value Type Description Menu.ToggleDelegate SetClientUI Declaration public static Menu.ToggleDelegate SetClientUI { get; } Property Value Type Description Menu.ToggleDelegate SetRoomCode Declaration public static Menu.MenuDelegate SetRoomCode { get; } Property Value Type Description Menu.MenuDelegate Methods SetListeners() Declaration public override void SetListeners() Overrides Menu.SetListeners() ToggleMenu(Boolean) Declaration public override void ToggleMenu(bool active) Parameters Type Name Description System.Boolean active Overrides Menu.ToggleMenu(Boolean) ToggleShift(Boolean) Called when desktop user pressed the \"Shift\" key. Declaration public void ToggleShift(bool active) Parameters Type Name Description System.Boolean active True when user is in the \"shifted\" state. False otherwise. ToggleTab(Boolean) Called when desktop user presses the \"Tab\" key. Declaration public void ToggleTab(bool active) Parameters Type Name Description System.Boolean active True when user is in the \"tabbed\" state. False otherwise. TutorialActive(Boolean) Called from tutorial exit button to reset tutorial. Declaration public void TutorialActive(bool active) Parameters Type Name Description System.Boolean active"
  },
  "api/XRControls.FirstPersonController.html": {
    "href": "api/XRControls.FirstPersonController.html",
    "title": "Class FirstPersonController | Planetary Parfait",
    "keywords": "Class FirstPersonController This script handles all desktop interactions pertaining to the DesktopRig in the scene. Inheritance System.Object FirstPersonController Namespace : XRControls Assembly : cs.temp.dll.dll Syntax public class FirstPersonController : MonoBehaviour, DesktopControls.IPlayerActions Fields analogMovement Declaration public bool analogMovement Field Value Type Description System.Boolean BottomClamp Declaration public float BottomClamp Field Value Type Description System.Single cursorLocked Declaration public bool cursorLocked Field Value Type Description System.Boolean FallTimeout Declaration public float FallTimeout Field Value Type Description System.Single Gravity Declaration public float Gravity Field Value Type Description System.Single Grounded Declaration public bool Grounded Field Value Type Description System.Boolean GroundedOffset Declaration public float GroundedOffset Field Value Type Description System.Single GroundedRadius Declaration public float GroundedRadius Field Value Type Description System.Single GroundLayers Declaration public LayerMask GroundLayers Field Value Type Description LayerMask jump Declaration public bool jump Field Value Type Description System.Boolean JumpHeight Declaration public float JumpHeight Field Value Type Description System.Single JumpTimeout Declaration public float JumpTimeout Field Value Type Description System.Single MoveSpeed Declaration public float MoveSpeed Field Value Type Description System.Single RotationSpeed Declaration public float RotationSpeed Field Value Type Description System.Single SpeedChangeRate Declaration public float SpeedChangeRate Field Value Type Description System.Single SprintSpeed Declaration public float SprintSpeed Field Value Type Description System.Single TopClamp Declaration public float TopClamp Field Value Type Description System.Single Methods GetSpeed() Declaration public float GetSpeed() Returns Type Description System.Single MovePlatform() Declaration public void MovePlatform() OnElevatePlatform(InputAction.CallbackContext) Declaration public void OnElevatePlatform(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnEscape(InputAction.CallbackContext) Declaration public void OnEscape(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnHapticDevice(InputAction.CallbackContext) Declaration public void OnHapticDevice(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnJump(InputAction.CallbackContext) Declaration public void OnJump(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnLook(InputAction.CallbackContext) Declaration public void OnLook(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove(InputAction.CallbackContext) Declaration public void OnMove(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMovePlatform(InputAction.CallbackContext) Declaration public void OnMovePlatform(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnRotateAnchor(InputAction.CallbackContext) Declaration public void OnRotateAnchor(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnRotateAnchorToggle(InputAction.CallbackContext) Declaration public void OnRotateAnchorToggle(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnSelect(InputAction.CallbackContext) Declaration public void OnSelect(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnSprint(InputAction.CallbackContext) Declaration public void OnSprint(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnTeleport(InputAction.CallbackContext) Declaration public void OnTeleport(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnToggleMenu(InputAction.CallbackContext) Declaration public void OnToggleMenu(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnToggleMode(InputAction.CallbackContext) Declaration public void OnToggleMode(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnTranslateAnchor(InputAction.CallbackContext) Declaration public void OnTranslateAnchor(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context TeleportPlayer(Transform, Boolean) Declaration public void TeleportPlayer(Transform destination, bool matchRotation) Parameters Type Name Description Transform destination System.Boolean matchRotation"
  },
  "api/XRControls.html": {
    "href": "api/XRControls.html",
    "title": "Namespace XRControls | Planetary Parfait",
    "keywords": "Namespace XRControls Classes FirstPersonController This script handles all desktop interactions pertaining to the DesktopRig in the scene. XRController This script handles VR interactions. XRManager"
  },
  "api/XRControls.XRController.html": {
    "href": "api/XRControls.XRController.html",
    "title": "Class XRController | Planetary Parfait",
    "keywords": "Class XRController This script handles VR interactions. Inheritance System.Object XRController Namespace : XRControls Assembly : cs.temp.dll.dll Syntax public class XRController : MonoBehaviour, XRIDefaultInputActions.IXRIRightHandInteractionActions, XRIDefaultInputActions.IXRIRightHandLocomotionActions, XRIDefaultInputActions.IXRILeftHandInteractionActions, XRIDefaultInputActions.IXRILeftHandLocomotionActions Fields aActive Declaration public bool aActive Field Value Type Description System.Boolean bActive Declaration public bool bActive Field Value Type Description System.Boolean controls Declaration public XRIDefaultInputActions controls Field Value Type Description XRIDefaultInputActions gripActive Declaration public bool gripActive Field Value Type Description System.Boolean hovering Declaration public bool hovering Field Value Type Description System.Boolean joystickActive Declaration public bool joystickActive Field Value Type Description System.Boolean leftHandActive Declaration public bool leftHandActive Field Value Type Description System.Boolean player Declaration public GameObject player Field Value Type Description GameObject terrainTiles Declaration public Transform terrainTiles Field Value Type Description Transform triggerActive Declaration public bool triggerActive Field Value Type Description System.Boolean xActive Declaration public bool xActive Field Value Type Description System.Boolean yActive Declaration public bool yActive Field Value Type Description System.Boolean Methods Hovering(GameObject) Declaration public void Hovering(GameObject gameObj) Parameters Type Name Description GameObject gameObj OnA(InputAction.CallbackContext) Declaration public void OnA(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnActivate(InputAction.CallbackContext) Declaration public void OnActivate(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnActivateValue(InputAction.CallbackContext) Declaration public void OnActivateValue(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnB(InputAction.CallbackContext) Declaration public void OnB(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnGripActive(InputAction.CallbackContext) Declaration public void OnGripActive(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnMove(InputAction.CallbackContext) Declaration public void OnMove(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnRotateAnchor(InputAction.CallbackContext) Declaration public void OnRotateAnchor(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnSelect(InputAction.CallbackContext) Declaration public void OnSelect(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnSelectValue(InputAction.CallbackContext) Declaration public void OnSelectValue(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnTeleportModeActivate(InputAction.CallbackContext) Declaration public void OnTeleportModeActivate(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnTeleportModeCancel(InputAction.CallbackContext) Declaration public void OnTeleportModeCancel(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnTeleportSelect(InputAction.CallbackContext) Declaration public void OnTeleportSelect(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnTranslateAnchor(InputAction.CallbackContext) Declaration public void OnTranslateAnchor(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnTurn(InputAction.CallbackContext) Declaration public void OnTurn(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnUIPress(InputAction.CallbackContext) Declaration public void OnUIPress(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnUIPressValue(InputAction.CallbackContext) Declaration public void OnUIPressValue(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnX(InputAction.CallbackContext) Declaration public void OnX(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context OnY(InputAction.CallbackContext) Declaration public void OnY(InputAction.CallbackContext context) Parameters Type Name Description InputAction.CallbackContext context ToggleGameObject(GameObject) Declaration public void ToggleGameObject(GameObject gameObj) Parameters Type Name Description GameObject gameObj"
  },
  "api/XRControls.XRManager.html": {
    "href": "api/XRControls.XRManager.html",
    "title": "Class XRManager | Planetary Parfait",
    "keywords": "Class XRManager Inheritance System.Object XRManager Namespace : XRControls Assembly : cs.temp.dll.dll Syntax public class XRManager : MonoBehaviour Fields Instance Declaration public static XRManager Instance Field Value Type Description XRManager"
  },
  "index.html": {
    "href": "index.html",
    "title": "Overview | Planetary Parfait",
    "keywords": "Overview Planetary Parfait is a scientific visualization platform that immerses you in custom 3D terrain and data layers while offering cross-platform collaboration between desktop and VR users. Engage in conversations over rich scientific data. The source data is planetary GIS data from the Java Mission-planning and Analysis for Remote Sensing (JMARS) software tool, which leverages public NASA databases. Users can prepare terrains using JMARS GIS, save them to their accounts, and easily access them in Parfait. Our Terrain Engine brings the prepared terrain DEMs and data layers into an immersive 3D environment. Whether you're analyzing surface features, navigating a lunar landing site, or preparing a virtual field trip to Mars, Planetary Parfait provides an engaging and dynamic way to interact with 3D terrain data. Usage This project is compatible with Unity Game Engine versions 2020.x and up and can be deployed to Meta Quests 1 and 2 as well as Mac/PC executables. Please download the repository and open a new project through Unity Hub. Inside Unity, double-click the JMARS_Scene to get started. Documentation View API reference for Planetary Parfait here: https://asu-meteorstudio.github.io/PlanetaryParfait/ Publications and Posters AGU 2022 NASA Visualization Competition AGU 2021 LPSC 2020 Contact Please direct any questions to Lauren Gold llgold@asu.edu . For information about the Meteor Studio Research lab, please visit our lab's website . People Project Leads Lauren Gold - Project Lead, PhD Student Dr. Robert LiKamWa - PI Student Developers Yan Rong Arabelle Friedman Orion Dobos Former team members: Alexandra Barrett Anthony Delphy Agustin Ballesteros Olivia Wang Carlos Encinas Guerrero Collaborators Scott Dickenshied Kenneth Rios Sadaat Anwar Nick Piacentine Dr. Kathryn Powell Dr. Jonathan Hill"
  }
}